<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="13" passed="12" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-03-06T05:48:33Z" name="Default suite" finished-at="2021-03-06T05:48:48Z" duration-ms="14973">
    <groups>
    </groups>
    <test started-at="2021-03-06T05:48:33Z" name="Default test" finished-at="2021-03-06T05:48:48Z" duration-ms="14973">
      <class name="TestAPIs.TestNG_DataProvider">
        <test-method signature="POSTExample1(java.lang.String, java.lang.String)[pri:0, instance:TestAPIs.TestNG_DataProvider@327af41b]" started-at="2021-03-06T11:18:33Z" name="POSTExample1" data-provider="POSTExample1" finished-at="2021-03-06T11:18:38Z" duration-ms="5223" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Arpita]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[majumdar]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- POSTExample1 -->
        <test-method signature="POSTExample2(java.lang.String, java.lang.String)[pri:0, instance:TestAPIs.TestNG_DataProvider@327af41b]" started-at="2021-03-06T11:18:38Z" name="POSTExample2" data-provider="POSTExample2" finished-at="2021-03-06T11:18:41Z" duration-ms="2186" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[APP]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NEW]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- POSTExample2 -->
        <test-method signature="POSTExample2(java.lang.String, java.lang.String)[pri:0, instance:TestAPIs.TestNG_DataProvider@327af41b]" started-at="2021-03-06T11:18:41Z" name="POSTExample2" data-provider="POSTExample2" finished-at="2021-03-06T11:18:42Z" duration-ms="1171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ABC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- POSTExample2 -->
        <test-method signature="POSTExample2(java.lang.String, java.lang.String)[pri:0, instance:TestAPIs.TestNG_DataProvider@327af41b]" started-at="2021-03-06T11:18:42Z" name="POSTExample2" data-provider="POSTExample2" finished-at="2021-03-06T11:18:43Z" duration-ms="920" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Iam]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Arpita]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- POSTExample2 -->
        <test-method signature="POSTExample2(java.lang.String, java.lang.String)[pri:0, instance:TestAPIs.TestNG_DataProvider@327af41b]" started-at="2021-03-06T11:18:43Z" name="POSTExample2" data-provider="POSTExample2" finished-at="2021-03-06T11:18:44Z" duration-ms="1260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[xyz]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- POSTExample2 -->
        <test-method signature="POSTExample2(java.lang.String, java.lang.String)[pri:0, instance:TestAPIs.TestNG_DataProvider@327af41b]" started-at="2021-03-06T11:18:44Z" name="POSTExample2" data-provider="POSTExample2" finished-at="2021-03-06T11:18:45Z" duration-ms="914" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[do]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nothing]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- POSTExample2 -->
      </class> <!-- TestAPIs.TestNG_DataProvider -->
      <class name="TestAPIs.POST_Tests">
        <test-method signature="postdata(java.lang.String, java.lang.String, int)[pri:0, instance:TestAPIs.POST_Tests@1bae316d]" started-at="2021-03-06T11:18:45Z" name="postdata" data-provider="dataforpost" finished-at="2021-03-06T11:18:45Z" duration-ms="510" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cube]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[arpita]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[101]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postdata -->
        <test-method signature="postdata(java.lang.String, java.lang.String, int)[pri:0, instance:TestAPIs.POST_Tests@1bae316d]" started-at="2021-03-06T11:18:45Z" name="postdata" data-provider="dataforpost" finished-at="2021-03-06T11:18:46Z" duration-ms="95" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[status]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chemestry]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postdata -->
        <test-method signature="postdata(java.lang.String, java.lang.String, int)[pri:0, instance:TestAPIs.POST_Tests@1bae316d]" started-at="2021-03-06T11:18:46Z" name="postdata" data-provider="dataforpost" finished-at="2021-03-06T11:18:46Z" duration-ms="76" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[roll]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gem]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[103]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postdata -->
        <test-method signature="getRecords()[pri:0, instance:TestAPIs.POST_Tests@1bae316d]" started-at="2021-03-06T11:18:48Z" name="getRecords" finished-at="2021-03-06T11:18:48Z" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRecords -->
        <test-method is-config="true" signature="generateLog()[pri:0, instance:TestAPIs.POST_Tests@1bae316d]" started-at="2021-03-06T11:18:48Z" name="generateLog" finished-at="2021-03-06T11:18:48Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateLog -->
      </class> <!-- TestAPIs.POST_Tests -->
      <class name="ObjectMapper">
        <test-method signature="POSTCall1()[pri:0, instance:ObjectMapper@2ce6c6ec]" started-at="2021-03-06T11:18:46Z" name="POSTCall1" finished-at="2021-03-06T11:18:46Z" duration-ms="346" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [201] but found [500]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [201] but found [500]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:370)
	at org.testng.Assert.assertEquals(Assert.java:380)
	at ObjectMapper.POSTCall1(ObjectMapper.java:37)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- POSTCall1 -->
      </class> <!-- ObjectMapper -->
      <class name="TestAPIs.GETCall">
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestAPIs.GETCall@147a5d08]" started-at="2021-03-06T11:18:33Z" name="setUp" finished-at="2021-03-06T11:18:33Z" duration-ms="477" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestAPIs.POST_Tests@1bae316d]" started-at="2021-03-06T11:18:33Z" name="setUp" finished-at="2021-03-06T11:18:33Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestAPIs.TestNG_DataProvider@327af41b]" started-at="2021-03-06T11:18:33Z" name="setUp" finished-at="2021-03-06T11:18:33Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="POSTTest()[pri:0, instance:TestAPIs.GETCall@147a5d08]" started-at="2021-03-06T11:18:46Z" name="POSTTest" finished-at="2021-03-06T11:18:48Z" duration-ms="1637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- POSTTest -->
        <test-method signature="getcalltest()[pri:0, instance:TestAPIs.GETCall@147a5d08]" started-at="2021-03-06T11:18:48Z" name="getcalltest" finished-at="2021-03-06T11:18:48Z" duration-ms="473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getcalltest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestAPIs.GETCall@147a5d08]" started-at="2021-03-06T11:18:53Z" name="tearDown" finished-at="2021-03-06T11:18:54Z" duration-ms="645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestAPIs.POST_Tests@1bae316d]" started-at="2021-03-06T11:18:54Z" name="tearDown" finished-at="2021-03-06T11:18:54Z" duration-ms="186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestAPIs.TestNG_DataProvider@327af41b]" started-at="2021-03-06T11:18:54Z" name="tearDown" finished-at="2021-03-06T11:18:54Z" duration-ms="156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestAPIs.GETCall -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
